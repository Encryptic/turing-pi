---
- name: Set up cluster-wide configuration.
  hosts: cluster
  gather_facts: false
  become: true

  handlers:
    - name: reboot-pi
      ansible.builtin.reboot:

  vars_files:
    - config.yml

  tasks:
    - name: Ensure cgroups are configured correctly in cmdline.txt.
      ansible.builtin.replace:
        path: /boot/cmdline.txt
        regexp: '^([\w](?!.*\b{{ item }}\b).*)$'
        replace: '\1 {{ item }}'
      with_items:
        - "cgroup_memory=1"
        - "cgroup_enable=memory"
      notify: reboot-pi

    - name: Download K3s install script.
      ansible.builtin.get_url:
        url: https://get.k3s.io
        dest: "~/k3s_install.sh"
        mode: a+x      


- name: Configure the control plane.
  hosts: control_plane
  gather_facts: false
  become: true

  vars_files:
    - config.yml

  tasks:
    # - name: Install K3s on control plane (takes a while).
    #   ansible.builtin.shell: >-
    #     K3S_TOKEN="{{ lookup('community.general.onepassword', 'pi-cluster-k3s-token', field='credential', vault='Homelab') }}"
    #     ~/k3s_install.sh >> ~/k3s_install_log.txt
    #   args:
    #     chdir: "~"
    #     creates: /var/lib/rancher/k3s/server/node-token

    # - name: Set node_token fact.
    #   ansible.builtin.set_fact:
    #     node_token: "{{ lookup('community.general.onepassword', 'pi-cluster-k3s-token', field='credential', vault='Homelab') }}"

    - name: Ensure required dependencies are installed.
      ansible.builtin.package:
        name:
          - python3-pip
          - python3-setuptools
          - build-essential
          - golang
          - git
        state: present
      become: true

    - name: Ensure required Python libraries are installed.
      ansible.builtin.pip:
        name:
          - openshift
          - pyyaml
        state: present
      become: true


# - name: Configure the worker nodes.
#   hosts: nodes
#   gather_facts: false
#   become: true

#   vars_files:
#     - config.yml

#   tasks:
#     - name: Install K3s on nodes (takes a while).
#       ansible.builtin.shell: >-
#         K3S_URL="{{ control_plane_api_url }}"
#         K3S_TOKEN="{{ lookup('community.general.onepassword', 'pi-cluster-k3s-token', field='credential', vault='Homelab') }}"
#         ~/k3s_install.sh >> ~/k3s_install_log.txt
#       args:
#         chdir: "~"
#         creates: /var/lib/rancher/k3s/agent/kubelet.kubeconfig
